apply plugin: 'java'
apply plugin: 'application'

version             = '0.1.0-SNAPSHOT'
status              = 'integration'
description         = 'Capsule WildFly Example'

ext.capsuleVer  = '1.0.1'
ext.capsuleShieldVer  = '0.2.0'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

configurations {
    capsule
    capsuleShield
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    capsule "co.paralleluniverse:capsule:$capsuleVer"
    capsuleShield "co.paralleluniverse:capsule-shield:$capsuleShieldVer"
}

task fetch {
  def f = new File('wildfly-10.0.0.CR4.zip')
  if (!f.exists()) {
    new URL('http://download.jboss.org/wildfly/10.0.0.CR4/wildfly-10.0.0.CR4.zip').withInputStream{ i -> f.withOutputStream{ it << i }}
  }
}

def wildflyZip = zipTree('wildfly-10.0.0.CR4.zip')

task fatCapsule(type: Jar, dependsOn: fetch) {
    archiveName = "capsule-wildfly-example.jar"

    from wildflyZip // embed our application server
    from { configurations.runtime } // embed dependencies

    from(configurations.capsule.collect { zipTree(it) }) { include 'Capsule.class' } // we just need the single Capsule class

    manifest {
        attributes(['Application-Script': 'wildfly-10.0.0.CR4/bin/standalone.sh'], "POSIX")
        // attributes(['Application-Script': 'wildfly-10.0.0.CR4/bin/standalone.bat'], "Windows")
        attributes ([
            // 'Premain-Class': 'Capsule',
            'Main-Class': 'Capsule',
            'Application-Name': 'capsule-wildfly-example',
            'Application-Version': version
        ])
    }
}

task ._(type: Jar, dependsOn: fetch) {
    archiveName = "capsule-wildfly-example-shield.jar"

    from 'boot-shield.sh'
    // from 'boot-shield.bat'

    from wildflyZip // embed our application server
    from { configurations.runtime } // embed dependencies

    from(configurations.capsule.collect { zipTree(it) }) { include 'Capsule.class' } // we just need the single Capsule class
    from { configurations.capsuleShield.iterator().next() } // we need the Capsule Shield JAR

    manifest {
        attributes(['Application-Script': 'boot-shield.sh'], "POSIX")
        // attributes(['Application-Script': 'boot-shield.bat'], "Windows")
        attributes ([
            // 'Premain-Class': 'Capsule',
            'Main-Class': 'Capsule',
            'Application-Name': 'capsule-wildfly-example-shield',
            'Application-Version': version,
            'Caplets': "co.paralleluniverse:capsule-shield:$capsuleShieldVer"
        ])
    }
}

defaultTasks 'fatCapsule'
